% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/btpc_BUGS_building.R
\name{b_TPC}
\alias{b_TPC}
\title{Perform MCMC}
\usage{
b_TPC(
  data,
  model,
  priors = NULL,
  samplerType = "RW",
  niter = 10000,
  inits = NULL,
  burn = 0,
  constants = NULL,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{data}{list, with expected entries "Trait" (corresponding to the trait being modeled by the thermal performance curve)
and "Temp" (corresponding to the temperature in Celsius that the trait is being measured at).}

\item{model}{A string specifying the model name, or a btpc_model object.
If a string is provided, the default model formula is provided if the model is implemented. If the model is not implemented, an error occurs.
Use \code{\link[=get_models]{get_models()}} to view all options.}

\item{priors}{list, optional input specifying prior distributions for parameters (default = NULL).
Elements of the list should correspond to model parameters,
and written using NIMBLE logic. For parameters not specified in the list, default priors are used.
Use \code{\link[=get_default_priors]{get_default_priors()}} to view default values.}

\item{samplerType}{character string, specifying the sampling method used during the MCMC.
Currently, supported options are:
\itemize{
\item Random Walk Metropolis ('RW')
\item Blocked Random Walk Metropolis ('RW_block')
\item Automated Factor Slice Sampling ('AF_slice')
\item Slice sampling ('slice')
}}

\item{niter}{integer, number of MCMC iterations to perform (default is niter = 10000).}

\item{inits}{optional list, initial parameter values to be provided to nimble MCMC.}

\item{burn}{optional integer, number of initial MCMC iterations to be discarded as burn-in. Default is burn = 0.}

\item{constants}{optional list, constants to be provided to model. If constants are needed and not provided, constant values are used.
Currently only used for model = 'pawar-shsch'.}

\item{verbose}{logical, determines whether to print additional information, Default is FALSE.}

\item{...}{Additional parameters to be passed to nimble during MCMC configuration and sampling.}
}
\value{
\code{b_TPC} returns a list containing entries:
\itemize{
\item \code{samples} - \code{mcmc.list} containing posterior samples of parameters for corresponding model.
\item \code{mcmc} -  \code{nimbleModel} object corresponding to model being fit.
\item \code{data} -  \code{list} containing trait and temperature data and number of observations (N).
\item \code{model_type} -  \code{character} containing the type of thermal performance curve being fit.
\item \code{constants} - A named vector containing the constant values used, if the model includes constants. Otherwise, returns NULL.
\item \code{uncomp_model} - Uncompiled version of the NIMBLE model. For internal use.
}
}
\description{
Generates NIMBLE model, and performs MCMC.
}
\details{
Behind the scenes, this function configures the necessary components to generate a BUGS model using NIMBLE.
The default priors and constant values are chosen to be as flexible as possible.

Both the model specification and the MCMC object are compiled by NIMBLE. Progress is printed for clarity's sake.
}
\examples{
library(nimble)
# simulate data
N <- 16
q <- .75
T_min <- 10
T_max <- 35
Temps <- rep(c(15, 20, 25, 30), N / 4)
Traits <- rep(0, N)
for (i in 1:N) {
  while (Traits[i] <= 0) {
    Traits[i] <- rnorm(
      1,
      -1 * q * (Temps[i] - T_max) * (Temps[i] - T_min) * (Temps[i] > T_min) * (Temps[i] < T_max), 2
    )
  }
}
trait_list <- list(Trait = Traits, Temp = Temps)

# create model
\dontrun{
quadratic_model <- b_TPC(data = trait_list, model = "quadratic")
quadratic_model <- b_TPC(
  data = trait_list, model = "quadratic", niter = 8000,
  inits = list(T_min = 15, T_max = 30),
  priors = list(q = "dunif(0, .5)", sigma.sq = "dexp(1)")
)
}
}
